apiVersion: v1
kind: Service
metadata:
  name: fabao-lawyer-mgr-vue
  namespace: default
spec:
  selector:
    app: fabao-lawyer-mgr-vue
  externalTrafficPolicy: Cluster #Local #主要配合云上的负载均衡使用，不进行svc的负载，即它是单独的节点，主要为了【负载均衡状态保持，植入cookie】,不过，如果浮在均衡使用的是轮训的方式，这边虽然不是cluster模式，但也会出现一个问题，就是同一个用户，发的请求一会儿在A节点，一会在B节点
  sessionAffinity: ClientIP #pod的会话保持
  type: NodePort
  publishNotReadyAddresses: false #表示是否pod就绪再关联上service，这个应该是false，否则会有服务不可用情况
  ports:
    - name: http
      port: 80
      protocol: TCP
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: fabao-lawyer-mgr-vue
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fabao-lawyer-mgr-vue
  template:
    metadata:
      labels:
        app: fabao-lawyer-mgr-vue
    spec:
      containers:
        - name: keycloak-controller
          image: {{IMAGE_REPOSITORY}}/{{REPOSITORY_NAMESPACE}}/fabao-lawyer-mgr-vue:{{IMAGE_TAG}}
          ports:
            - containerPort: 80
              protocol: TCP

  #滚动升级策略,在负载均衡时，应该将到master节点，而不是work节点
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0




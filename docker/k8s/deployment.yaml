apiVersion: v1
kind: Service
metadata:
  name: demo
  namespace: default
spec:
  selector:
    app: demo
  externalTrafficPolicy: Cluster #Local #主要配合云上的负载均衡使用，不进行svc的负载，即它是单独的节点，主要为了【负载均衡状态保持，植入cookie】,不过，如果浮在均衡使用的是轮训的方式，这边虽然不是cluster模式，但也会出现一个问题，就是同一个用户，发的请求一会儿在A节点，一会在B节点
  sessionAffinity: ClientIP #pod的会话保持
  type: NodePort
  publishNotReadyAddresses: false #表示是否pod就绪再关联上service，这个应该是false，否则会有服务不可用情况
  ports:
    - name: http
      port: 8080
      protocol: TCP
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: demo
  template:
    metadata:
      labels:
        app: demo
    spec:
      hostAliases:
        - ip: "192.168.10.132"
          hostnames: [ "kafka132" ]
      containers:
        - name: fabao-lawyer-mgr
          image: {{IMAGE_REPOSITORY}}/{{REPOSITORY_NAMESPACE}}/fabao-lawyer-mgr:{{IMAGE_TAG}}
          readinessProbe:
            failureThreshold: 10
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 3
            tcpSocket:
              port: 8080
            timeoutSeconds: 1
          ports:
            - containerPort: 8080
              protocol: TCP
          env:
            - name: JAVA_OPTS
              value: "-Xms1024M -Xmx1024M -XX:ConcGCThreads=4 -XX:ParallelGCThreads=4 -XX:+UnlockExperimentalVMOptions -XX:+UseG1GC -Djboss.bind.address.management=0.0.0.0"
            - name: TZ
              value: "Asia/Shanghai"
            - name: spring.profiles.active
              value: "aliyunprod"
          volumeMounts:
            - name: timezone
              mountPath: /etc/localtime
      volumes:
        - name: timezone
          hostPath:
            path: /usr/share/zoneinfo/Asia/Shanghai




  #滚动升级策略,在负载均衡时，应该将到master节点，而不是work节点
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0



